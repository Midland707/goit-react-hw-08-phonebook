{"version":3,"file":"static/js/57.67940210.chunk.js","mappings":"+RAMIA,GAAMC,EAAAA,EAAAA,GAAO,OACjBD,EAAIE,YAAc,MAClB,IAAIC,GAASC,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQC,EAAwCF,EAAxCE,KAAIC,EAAoCH,EAAlCI,cAAAA,OAAa,IAAAD,GAAOA,EAAKE,GAAIC,EAAAA,EAAAA,GAAKN,EAAKO,GAC/CC,EAASJ,EAAgB,CAAEK,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAa,CAAC,EACtG,OAAuBC,EAAAA,EAAAA,KACrBjB,GAAGkB,EAAAA,EAAAA,GAAA,CAEDZ,IAAAA,EACAa,QAASZ,EACTa,OAAKF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAL,GAAM,IACTQ,WAAY,EACZC,SAAU,KAETZ,GAGT,IACAP,EAAOD,YAAc,UACRE,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQC,EAAkBF,EAAlBE,KAASG,GAAIC,EAAAA,EAAAA,GAAKN,EAAKkB,GAC/B,OAAuBN,EAAAA,EAAAA,KAAId,GAAMe,EAAAA,EAAAA,GAAA,CAAIX,KAAAA,EAAMD,IAAAA,EAAKkB,aAAc,UAAad,GAC7E,IACOR,YAAc,S,2ICnBrBuB,GAA0CC,EAAAA,EAAAA,GAAc,CACtDC,KAAM,oBACNC,aAAc,oGACdC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHGM,EAAkBF,EAAA,GAAEG,EAAaH,EAAA,GAIlCI,GAAO7B,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMO,GAASqB,EAAAA,EAAAA,IAAoB,OAAQ7B,GAC3C8B,GAMIC,EAAAA,EAAAA,IAAiB/B,GALnBgC,EAAQF,EAARE,SAAQC,EAAAH,EACRI,UAAAA,OAAS,IAAAD,EAAG,OAAMA,EAClBE,EAAaL,EAAbK,cACAC,EAAON,EAAPM,QACG/B,GAAIC,EAAAA,EAAAA,GAAAwB,EAAAvB,GAEH8B,ECtBR,SAA0BL,GACxB,OAAOM,EAAAA,SAAAA,QAAiBN,GAAUO,QAChC,SAACC,GAAK,OAAKC,EAAAA,EAAAA,gBAAeD,EAAM,GAEpC,CDkBwBE,CAAiBV,GAEjCW,EAAeP,GAAOQ,EAAAA,EAAAA,GAAA,GADX,kCAC4B,CAAEC,GAAIT,IAAc,CAAC,EAClE,OAAuBxB,EAAAA,EAAAA,KAAIc,EAAoB,CAAEoB,MAAOtC,EAAQwB,UAA0BpB,EAAAA,EAAAA,KACxFhB,EAAAA,EAAAA,IAASiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEPZ,IAAAA,EACA8C,cAAeb,EACfc,kBAAmBb,EACnBc,KAAM,OACNlC,OAAKF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOL,EAAO0C,WAAcP,IAC9BtC,GAAI,IACP2B,SAAUK,MAGhB,IACAT,EAAK/B,YAAc,QACDE,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GACXD,EAAhBmD,GAAR,IAAe9C,GAAIC,EAAAA,EAAAA,GAAKN,EAAKkB,GAC7B,OAAuBN,EAAAA,EAAAA,KAAIgB,GAAIf,EAAAA,EAAAA,GAAA,CAAIZ,IAAAA,EAAKkD,GAAI,KAAMjB,UAAW,UAAWkB,YAAa,OAAU/C,GACjG,IACYR,YAAc,eACNE,EAAAA,EAAAA,IAAW,SAAwBC,EAAOC,GACpCD,EAAhBmD,GAAR,IAAe9C,GAAIC,EAAAA,EAAAA,GAAKN,EAAKqD,GAC7B,OAAuBzC,EAAAA,EAAAA,KAAIgB,GAAIf,EAAAA,EAAAA,GAAA,CAAIZ,IAAAA,EAAKkD,GAAI,KAAMjB,UAAW,UAAWkB,YAAa,OAAU/C,GACjG,IACcR,YAAc,gBAC5B,IAAIyD,GAAWvD,EAAAA,EAAAA,IAAW,SAAmBC,EAAOC,GAClD,IAAMO,EAASmB,IACf,OAAuBf,EAAAA,EAAAA,KAAIhB,EAAAA,EAAAA,IAASiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAIZ,IAAAA,GAAQD,GAAK,IAAEe,MAAOP,EAAO+C,OACvE,IACAD,EAASzD,YAAc,YACRE,EAAAA,EAAAA,IAAW,SAAmBC,EAAOC,GAClD,IAAMO,EAASmB,IACf,OAAuBf,EAAAA,EAAAA,KAAI4C,EAAAA,GAAI3C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAIZ,IAAAA,EAAKgD,KAAM,gBAAmBjD,GAAK,IAAEe,MAAOP,EAAOiD,OACxF,IACS5D,YAAc,W,yEExDV6D,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,MAACP,EAAQ,CAAAtB,SAAA,EACP8B,EAAAA,EAAAA,KAAA,KAAA9B,SAAG,oBACH8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QANQ,WAClBL,GAASM,EAAAA,EAAAA,MACX,EAIiCjC,SAAC,aAGpC,EC4CA,EApDmB,WACjB,IAAMkC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/B,OACEP,EAAAA,EAAAA,MAAClE,EAAG,CAAAqC,SAAA,CACDkC,GACCL,EAAAA,EAAAA,MAACjC,EAAI,CAACnB,QAAQ,OAAO4D,IAAI,OAAO1D,eAAe,SAAQqB,SAAA,EACrD8B,EAAAA,EAAAA,KAACR,EAAQ,CAAAtB,UACP8B,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAG,IAAGvC,UACb8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAA/B,SAAC,cAGZ8B,EAAAA,EAAAA,KAACR,EAAQ,CAAAtB,UACP8B,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAG,YAAWvC,UACrB8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAA/B,SAAC,kBAGZ8B,EAAAA,EAAAA,KAACJ,EAAQ,QAGXG,EAAAA,EAAAA,MAACjC,EAAI,CAACnB,QAAQ,OAAO4D,IAAI,OAAO1D,eAAe,SAAQqB,SAAA,EACrD8B,EAAAA,EAAAA,KAACR,EAAQ,CAAAtB,UACP8B,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAG,IAAGvC,UACb8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAA/B,SAAC,cAGZ8B,EAAAA,EAAAA,KAACR,EAAQ,CAAAtB,UACP8B,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAG,SAAQvC,UAClB8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAA/B,SAAC,eAGZ8B,EAAAA,EAAAA,KAACR,EAAQ,CAAAtB,UACP8B,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAG,YAAWvC,UACrB8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAA/B,SAAC,qBAMhB8B,EAAAA,EAAAA,KAACU,EAAAA,SAAQ,CACPC,UACEZ,EAAAA,EAAAA,MAAA,OAAA7B,SAAA,EACE8B,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAACC,WAAS,EAAC7B,MAAO,KAAM,qBAGpCd,UAED8B,EAAAA,EAAAA,KAACc,EAAAA,GAAM,QAIf,C,uGCxDAxD,GAA4CC,E,QAAAA,GAAc,CACxDwD,QAAQ,EACRvD,KAAM,uBACNE,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHwB0D,GAAFtD,EAAA,GAAgBA,EAAA,I,yDCGxC,SAASuD,EAAW/E,GAClB,IAAQgC,EAAiChC,EAAjCgC,SAAUgD,EAAuBhF,EAAvBgF,UAAc3E,GAAIC,EAAAA,EAAAA,GAAKN,EAAKO,GACxC0E,GAAYxC,EAAAA,EAAAA,gBAAeT,IAAYkD,EAAAA,EAAAA,cAAalD,EAAU,CAClE,eAAe,EACfmD,WAAW,IACRnD,EACCoD,GAAaC,EAAAA,EAAAA,IAAG,sBAAuBL,GAC7C,OAAuBpE,EAAAA,EAAAA,KACrBhB,EAAAA,EAAAA,MAAWiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAETJ,QAAS,cACT6E,UAAW,SACXtE,WAAY,GACTX,GAAI,IACP2E,UAAWI,EACXpD,SAAUiD,IAGhB,CACAF,EAAWlF,YAAc,a,yFClBzB,SAAS0F,EAAcvF,GACrB,IACEwF,EAOExF,EAPFwF,MACAC,EAMEzF,EANFyF,UAASC,EAMP1F,EALFoC,QAAAA,OAAO,IAAAsD,EAAG,SAAQA,EAAAC,EAKhB3F,EAJFgC,SAAAA,OAAQ,IAAA2D,GAAmB/E,EAAAA,EAAAA,KAAIgF,EAAAA,EAAS,CAAEC,MAAO,eAAgBC,MAAO,MAAOC,OAAQ,QAAQJ,EAC/FX,EAGEhF,EAHFgF,UACAjE,EAEEf,EAFFe,MACGV,GAAIC,EAAAA,EAAAA,GACLN,EAAKO,GACH6E,GAAaC,EAAAA,EAAAA,IAAG,yBAA0BL,GAC1CgB,EAA2B,UAAdP,EAAwB,YAAc,cACnDQ,GAAgBC,EAAAA,EAAAA,UACpB,eAAAC,EAAA,OAAAtF,EAAAA,EAAAA,IAAAsF,EAAA,CACE1F,QAAS,OACTC,WAAY,SACZ0F,SAAUZ,EAAQ,WAAa,aAAU5C,EAAAA,EAAAA,GAAAuD,EACxCH,EAAaR,EAAQpD,EAAU,IAACQ,EAAAA,EAAAA,GAAAuD,EAAA,WACvB,QAAKvD,EAAAA,EAAAA,GAAAuD,EAAA,aACH,UAAQA,GACjBpF,EAAK,GAEV,CAACA,EAAOyE,EAAOQ,EAAY5D,IAE7B,OAAuBxB,EAAAA,EAAAA,KAAIhB,EAAAA,EAAAA,KAAUiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAImE,UAAWI,GAAe/E,GAAI,IAAEU,MAAOkF,EAAejE,SAAAA,IACjG,CACAuD,EAAc1F,YAAc,gB,uMCRxBkE,GAAShE,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC9B,IAAMoG,EAAQvB,IACRtE,GAAS8F,EAAAA,EAAAA,IAAe,UAAQzF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOwF,GAAUrG,IACvD8B,GAeIC,EAAAA,EAAAA,IAAiB/B,GAAMuG,EAAAzE,EAdzB0E,WAAAA,OAAU,IAAAD,EAAY,MAATF,OAAgB,EAASA,EAAMG,WAAUD,EACtDE,EAAS3E,EAAT2E,UACAC,EAAQ5E,EAAR4E,SACA1E,EAAQF,EAARE,SACA2E,EAAQ7E,EAAR6E,SACAC,EAAS9E,EAAT8E,UACAC,EAAW/E,EAAX+E,YAAWC,EAAAhF,EACXiF,YAAAA,OAAW,IAAAD,EAAG,SAAQA,EACtBE,EAAIlF,EAAJkF,KACAC,EAAOnF,EAAPmF,QAAOC,EAAApF,EACPqF,iBAAAA,OAAgB,IAAAD,EAAG,QAAOA,EAC1BlC,EAASlD,EAATkD,UACA7B,EAAErB,EAAFqB,GACG9C,GAAIC,EAAAA,EAAAA,GAAAwB,EAAAvB,GAEH6G,GAAelB,EAAAA,EAAAA,UAAQ,WAC3B,IAAMmB,GAAMxG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAkB,MAAVL,OAAiB,EAASA,EAAe,QAAC,IAAE8G,OAAQ,IACxE,OAAAzG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEJ,QAAS,cACT8G,WAAY,OACZ7G,WAAY,SACZC,eAAgB,SAChB6G,WAAY,OACZpB,SAAU,WACVqB,WAAY,SACZC,cAAe,SACfC,QAAS,QACNnH,KACE6F,GAAS,CAAEgB,OAAAA,GAEpB,GAAG,CAAC7G,EAAQ6F,IACZuB,ECzDF,SAAuB9E,GACrB,IAAA+E,GAAgCC,EAAAA,EAAAA,WAAUhF,GAAMiF,GAAAtG,EAAAA,EAAAA,GAAAoG,EAAA,GAAzCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAO5B,MAAO,CAAE9H,KANWiI,EAAAA,EAAAA,cAAY,SAACC,GAC1BA,GAELF,EAA6B,WAAjBE,EAAKC,QACnB,GAAG,IAEwBpB,KADdgB,EAAW,cAAW,EAErC,CDgD2CK,CAAclF,GAA1CmF,EAAIV,EAAT3H,IAAiBsI,EAAWX,EAAjBZ,KACbwB,EAAe,CAAE5B,UAAAA,EAAWD,SAAAA,EAAUI,YAAAA,EAAa/E,SAAAA,GACzD,OAAuByG,EAAAA,EAAAA,MACrB7I,EAAAA,EAAAA,QAAaiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEXZ,KAAKyI,EAAAA,EAAAA,IAAazI,EAAKqI,GACvBnF,GAAAA,EACA6D,KAAc,MAARA,EAAeA,EAAOuB,EAC5B,eAAeI,EAAAA,EAAAA,IAASjC,GACxB,gBAAgBiC,EAAAA,EAAAA,IAASlC,GACzB1F,MAAOqG,EACPpC,WAAWK,EAAAA,EAAAA,IAAG,gBAAiBL,IAC5B3E,GAAI,IACPuI,SAAUpC,GAAcC,EACxBzE,SAAU,CACRyE,GAAkC,UAArBU,IAAgDvG,EAAAA,EAAAA,KAC3D2E,EACA,CACEP,UAAW,gCACXQ,MAAOqB,EACPpB,UAAW,QACXrD,QAAS2E,EACT/E,SAAUiF,IAGdR,EAAYI,IAA+BjG,EAAAA,EAAAA,KAAIhB,EAAAA,EAAAA,KAAa,CAAEiJ,QAAS,EAAG7G,UAA0BpB,EAAAA,EAAAA,KAAIkI,GAAajI,EAAAA,EAAAA,GAAA,GAAO2H,OAAqC5H,EAAAA,EAAAA,KAAIkI,GAAajI,EAAAA,EAAAA,GAAA,GAAO2H,IACzL/B,GAAkC,QAArBU,IAA8CvG,EAAAA,EAAAA,KACzD2E,EACA,CACEP,UAAW,8BACXQ,MAAOqB,EACPpB,UAAW,MACXrD,QAAS2E,EACT/E,SAAUiF,OAMtB,IAEA,SAAS6B,EAAc9I,GACrB,IAAQ2G,EAA+C3G,EAA/C2G,SAAUC,EAAqC5G,EAArC4G,UAAW5E,EAA0BhC,EAA1BgC,SAAU+E,EAAgB/G,EAAhB+G,YACvC,OAAuB0B,EAAAA,EAAAA,MAAKM,EAAAA,SAAU,CAAE/G,SAAU,CAChD2E,IAA4B/F,EAAAA,EAAAA,KAAImE,EAAY,CAAEiE,UAAWjC,EAAa/E,SAAU2E,IAChF3E,EACA4E,IAA6BhG,EAAAA,EAAAA,KAAImE,EAAY,CAAE3B,YAAa2D,EAAa/E,SAAU4E,MAEvF,CARA7C,EAAOlE,YAAc,Q,8FEpFrB,SAASoJ,IAAmB,QAAAC,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GACxB,OAAO,SAACpB,GACNkB,EAAKG,SAAQ,SAACvJ,IAflB,SAAmBA,EAAK6C,GACtB,GAAW,MAAP7C,EAEJ,GAAmB,oBAARA,EAIX,IACEA,EAAIwJ,QAAU3G,CAChB,CAAE,MAAO4G,GACP,MAAM,IAAIC,MAAM,wBAADC,OAAyB9G,EAAK,cAAA8G,OAAa3J,EAAG,KAC/D,MAPEA,EAAI6C,EAQR,CAIM+G,CAAU5J,EAAKkI,EACjB,GACF,CACF,CACA,SAASO,IAAsB,QAAAoB,EAAAX,UAAAC,OAANC,EAAI,IAAAC,MAAAQ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJV,EAAIU,GAAAZ,UAAAY,GAC3B,OAAO7D,EAAAA,EAAAA,UAAQ,kBAAM+C,EAASe,WAAC,EAAGX,EAAK,GAAEA,EAC3C,C","sources":["../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/UserMenu.jsx","components/Navigation.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import { ListItem, Button } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/authorization/operations';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n  return (\n    <ListItem>\n      <p>mango@mail.com</p>\n      <Button onClick={handleClick}>Logout</Button>\n    </ListItem>\n  );\n};\n","import { Suspense } from 'react';\nimport { Box, List, ListItem, Button } from '@chakra-ui/react';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { Progress } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/authorization/selectors';\nimport { UserMenu } from './UserMenu';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <Box>\n      {isLoggedIn ? (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          <ListItem>\n            <NavLink to=\"/\">\n              <Button>Home</Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/contacts\">\n              <Button>Contacts</Button>\n            </NavLink>\n          </ListItem>\n          <UserMenu />\n        </List>\n      ) : (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          <ListItem>\n            <NavLink to=\"/\">\n              <Button>Home</Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/login\">\n              <Button>Login</Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/register\">\n              <Button>Register</Button>\n            </NavLink>\n          </ListItem>\n        </List>\n      )}\n\n      <Suspense\n        fallback={\n          <div>\n            <Progress hasStripe value={64} />\n            Loading page...\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default Navigation;\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["Box","chakra","displayName","Square","forwardRef","props","ref","size","_props$centerContent","centerContent","rest","_objectWithoutProperties","_excluded","styles","display","alignItems","justifyContent","jsx","_objectSpread","boxSize","__css","flexShrink","flexGrow","_excluded2","borderRadius","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","_omitThemingProps$sty","styleType","stylePosition","spacing","validChildren","Children","filter","child","isValidElement","getValidChildren","spacingStyle","_defineProperty","mt","value","listStyleType","listStylePosition","role","container","as","marginStart","_excluded3","ListItem","item","Icon","icon","UserMenu","dispatch","useDispatch","_jsxs","_jsx","Button","onClick","logOut","isLoggedIn","useSelector","selectIsLoggedIn","gap","NavLink","to","Suspense","fallback","Progress","hasStripe","Outlet","strict","useButtonGroup","ButtonIcon","className","_children","cloneElement","focusable","_className","cx","alignSelf","ButtonSpinner","label","placement","_props$spacing","_props$children","Spinner","color","width","height","marginProp","spinnerStyles","useMemo","_objectSpread2","position","group","useStyleConfig","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","current","error","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}