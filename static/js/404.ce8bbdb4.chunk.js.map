{"version":3,"file":"static/js/404.ce8bbdb4.chunk.js","mappings":"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","sources":["components/UserMenu.jsx","components/Navigation.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["import { ListItem, Button, Box, Text } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/authorization/operations';\nimport { selectUser } from 'redux/authorization/selectors';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n  return (\n    <ListItem>\n      <Box display=\"flex\" alignItems=\"center\" gap=\"20px\">\n        <Text color=\"white\">Hello ( {user.email} )</Text>\n        <Button colorScheme=\"red\" variant=\"ghost\" onClick={handleClick}>\n          Logout\n        </Button>\n      </Box>\n    </ListItem>\n  );\n};\n","import { Suspense } from 'react';\nimport { Box, List, ListItem, Button, Text } from '@chakra-ui/react';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { Progress } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/authorization/selectors';\nimport { UserMenu } from './UserMenu';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <Box paddingTop=\"20px\">\n      {isLoggedIn ? (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          {/* <ListItem>\n            <Text color=\"red\" fontSize=\"30px\">\n              Phonebook\n            </Text>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/contacts\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Contacts\n              </Button>\n            </NavLink>\n          </ListItem> */}\n          <UserMenu />\n        </List>\n      ) : (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          <ListItem>\n            <Text color=\"red\" fontSize=\"35px\">\n              Phonebook\n            </Text>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/login\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Login\n              </Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/register\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Register\n              </Button>\n            </NavLink>\n          </ListItem>\n        </List>\n      )}\n\n      <Suspense\n        fallback={\n          <div>\n            <Progress hasStripe value={64} />\n            Loading page...\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default Navigation;\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["UserMenu","dispatch","useDispatch","user","useSelector","selectUser","_jsx","ListItem","children","_jsxs","Box","display","alignItems","gap","Text","color","email","Button","colorScheme","variant","onClick","logOut","isLoggedIn","selectIsLoggedIn","paddingTop","List","justifyContent","fontSize","NavLink","to","Suspense","fallback","Progress","hasStripe","value","Outlet","_createContext","createContext","strict","name","_createContext2","_slicedToArray","useButtonGroup","ButtonIcon","props","className","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","spacing","_props$children","Spinner","width","height","__css","marginProp","spinnerStyles","useMemo","_objectSpread2","position","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","align","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","errorMessage","ListStylesProvider","useListStyles","useMultiStyleConfig","_omitThemingProps$sty","styleType","stylePosition","validChildren","Children","filter","child","getValidChildren","spacingStyle","mt","listStyleType","listStylePosition","role","container","_excluded2","_excluded3","item","Icon","icon","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","current","error","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}