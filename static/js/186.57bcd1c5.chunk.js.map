{"version":3,"file":"static/js/186.57bcd1c5.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/UserMenu.jsx","components/Navigation.jsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import { ListItem, Button, Box, Text } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/authorization/operations';\nimport { selectUser } from 'redux/authorization/selectors';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const handleClick = () => {\n    dispatch(logOut());\n  };\n  return (\n    <ListItem>\n      <Box display=\"flex\" alignItems=\"center\" gap=\"20px\">\n        <Text color=\"white\">Hello ( {user.email} )</Text>\n        <Button colorScheme=\"red\" variant=\"ghost\" onClick={handleClick}>\n          Logout\n        </Button>\n      </Box>\n    </ListItem>\n  );\n};\n","import { Suspense } from 'react';\nimport { Box, List, ListItem, Button, Text } from '@chakra-ui/react';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { Progress } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/authorization/selectors';\nimport { UserMenu } from './UserMenu';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <Box paddingTop=\"20px\">\n      {isLoggedIn ? (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          <ListItem>\n            <Text color=\"red\" fontSize=\"30px\">\n              Phonebook\n            </Text>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/contacts\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Contacts\n              </Button>\n            </NavLink>\n          </ListItem>\n          <UserMenu />\n        </List>\n      ) : (\n        <List display=\"flex\" gap=\"50px\" justifyContent=\"center\">\n          <ListItem>\n            <Text color=\"red\" fontSize=\"35px\">\n              Phonebook\n            </Text>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/login\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Login\n              </Button>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"/register\">\n              <Button colorScheme=\"red\" variant=\"ghost\">\n                Register\n              </Button>\n            </NavLink>\n          </ListItem>\n        </List>\n      )}\n\n      <Suspense\n        fallback={\n          <div>\n            <Progress hasStripe value={64} />\n            Loading page...\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default Navigation;\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","Children","filter","child","isValidElement","getValidChildren","spacingStyle","_defineProperty","mt","jsx","value","chakra","_objectSpread","listStyleType","listStylePosition","role","__css","container","displayName","as","_excluded2","marginStart","_excluded3","ListItem","item","Icon","icon","UserMenu","dispatch","useDispatch","user","useSelector","selectUser","_jsx","_jsxs","Box","display","alignItems","gap","Text","color","email","Button","colorScheme","variant","onClick","logOut","isLoggedIn","selectIsLoggedIn","paddingTop","justifyContent","fontSize","NavLink","to","Suspense","fallback","Progress","hasStripe","Outlet","strict","useButtonGroup","ButtonIcon","className","_children","cloneElement","focusable","_className","cx","alignSelf","flexShrink","ButtonSpinner","label","placement","_props$spacing","_props$children","Spinner","width","height","marginProp","spinnerStyles","useMemo","_objectSpread2","position","group","useStyleConfig","_omitThemingProps$isD","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_useState","useState","_useState2","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","align","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","current","error","Error","concat","assignRef","_len2","_key2","apply"],"sourceRoot":""}