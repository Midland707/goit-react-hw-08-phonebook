{"version":3,"file":"static/js/40.9ae659db.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactItem.jsx","components/ContactList.jsx","pages/ContactsPage.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactItems;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { Input, Button, FormLabel, Box, Text } from '@chakra-ui/react';\nimport { Field, Form, Formik } from 'formik';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Box w=\"500px\" mr=\"auto\" ml=\"auto\">\n      <Text color=\"white\" fontSize=\"50px\" textAlign=\"center\">\n        Add contact\n      </Text>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={(values, actions) => {\n          const alertState = contacts.find(\n            contact => contact.name === values.name\n          );\n          if (!alertState) {\n            dispatch(\n              addContact({\n                name: values.name,\n                number: values.number,\n              })\n            );\n            actions.setSubmitting(false);\n            actions.resetForm();\n          } else alert(`${values.name} is already in contacts`);\n        }}\n      >\n        {props => (\n          <Form>\n            <Box color=\"white\" w=\"300px\" mr=\"auto\" ml=\"auto\">\n              <Field name=\"name\">\n                {({ field }) => (\n                  <FormLabel margin=\"0px\" marginTop=\"20px\">\n                    Name\n                    <Input\n                      {...field}\n                      placeholder=\". . . name\"\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Jacob Mercer...\"\n                      required\n                    />\n                  </FormLabel>\n                )}\n              </Field>\n              <Field name=\"number\">\n                {({ field }) => (\n                  <FormLabel margin=\"0px\" marginTop=\"20px\">\n                    Number phone\n                    <Input\n                      {...field}\n                      placeholder=\". . . number phone\"\n                      type=\"tel\"\n                      name=\"number\"\n                      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                      required\n                    />\n                  </FormLabel>\n                )}\n              </Field>\n              <Button\n                type=\"submit\"\n                w=\"300px\"\n                marginTop=\"20px\"\n                color=\"white\"\n                colorScheme=\"green\"\n              >\n                Add contact\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Input, FormLabel } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FormLabel color=\"white\" margin=\"0px\" marginTop=\"20px\">\n      Find contacts by name\n      <Input\n        placeholder=\". . . name to find\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </FormLabel>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport { ListItem, Button } from '@chakra-ui/react';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      {name}: {number}\n      <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { ContactItem } from 'components/ContactItem';\nimport { List } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsOperations';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Box, Text } from '@chakra-ui/react';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      marginTop=\"20px\"\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      alignContent=\"center\"\n      flexDirection=\"column\"\n      fontSize=\"20px\"\n    >\n      <ContactForm />\n      {isLoading && !error ? (\n        <b>Request in progress...</b>\n      ) : contacts.length === 0 ? (\n        <div>Contacts list is empty ... </div>\n      ) : (\n        <>\n          <Text margin=\"0\" marginBottom=\"15px\">\n            Contacts\n          </Text>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","name","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectContacts","state","contacts","contactItems","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","contact","toLowerCase","includes","trim","ContactForm","dispatch","useDispatch","useSelector","_jsxs","Box","w","mr","ml","children","_jsx","Text","color","fontSize","textAlign","Formik","initialValues","number","onSubmit","values","actions","alert","addContact","setSubmitting","resetForm","props","Form","Field","_ref","field","FormLabel","margin","marginTop","Input","_objectSpread","placeholder","type","pattern","title","required","_ref2","Button","colorScheme","Filter","onChange","e","setFilter","target","ContactItem","id","ListItem","onClick","deleteContact","ContactList","List","useEffect","getContacts","display","flexWrap","alignContent","flexDirection","_Fragment","marginBottom","_createContext","createContext","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","forwardRef","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","Children","child","isValidElement","getValidChildren","spacingStyle","_defineProperty","mt","jsx","chakra","listStyleType","listStylePosition","role","__css","container","displayName","as","_excluded2","marginStart","_excluded3","item","Icon","icon"],"sourceRoot":""}