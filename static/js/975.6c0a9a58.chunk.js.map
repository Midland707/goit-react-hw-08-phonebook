{"version":3,"file":"static/js/975.6c0a9a58.chunk.js","mappings":"4SAKaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,EAAE,QAAQC,GAAG,OAAOC,GAAG,OAAMC,SAAA,EAChCC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,QAAQC,SAAS,OAAOC,UAAU,SAAQL,SAAC,kBAGvDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,QAAQC,SAAS,OAAOC,UAAU,SAAQL,SAAC,sCAGvDC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAACC,EAAQC,GACjBpB,GACEqB,EAAAA,EAAAA,IAAS,CACPN,KAAMI,EAAOJ,KACbC,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,YAGrBG,EAAQE,eAAc,GACtBF,EAAQG,WACV,EAAEhB,SAED,SAAAiB,GAAK,OACJhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAAAlB,UACHL,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACO,MAAM,QAAQN,EAAE,QAAQC,GAAG,OAAOC,GAAG,OAAMC,SAAA,EAC9CC,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACX,KAAK,OAAMR,SACf,SAAAoB,GAAA,IAAGC,EAAKD,EAALC,MAAK,OACP1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAS,CAACC,OAAO,MAAMC,UAAU,OAAMxB,SAAA,CAAC,YAEvCC,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAL,GAAK,IACTM,YAAY,iBACZC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,cACRC,MAAM,yIACNC,UAAQ,OAEA,KAGhB9B,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACX,KAAK,QAAOR,SAChB,SAAAgC,GAAA,IAAGX,EAAKW,EAALX,MAAK,OACP1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAS,CAACC,OAAO,MAAMC,UAAU,OAAMxB,SAAA,CAAC,SAEvCC,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAL,GAAK,IACTM,YAAY,cACZC,KAAK,QACLpB,KAAK,QACLqB,QAAQ,4CACRC,MAAM,oBACNC,UAAQ,OAEA,KAGhB9B,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACX,KAAK,WAAUR,SACnB,SAAAiC,GAAA,IAAGZ,EAAKY,EAALZ,MAAK,OACP1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAS,CAACC,OAAO,MAAMC,UAAU,OAAMxB,SAAA,CAAC,YAEvCC,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAL,GAAK,IACTM,YAAY,iBACZC,KAAK,WACLpB,KAAK,WACLqB,QAAQ,QACRC,MAAM,yBACNC,UAAQ,OAEA,KAGhB9B,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLN,KAAK,SACL/B,EAAE,QACF2B,UAAU,OACVrB,MAAM,QACNgC,YAAY,QAAOnC,SACpB,eAIE,MAKjB,EClFA,EAXqB,WACnB,OACEL,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAApC,SAAA,EACEC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAArC,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACT,EAAY,MAGnB,C","sources":["components/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { Input, Button, FormLabel, Box, Text } from '@chakra-ui/react';\nimport { Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/authorization/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box w=\"500px\" mr=\"auto\" ml=\"auto\">\n      <Text color=\"white\" fontSize=\"50px\" textAlign=\"center\">\n        Registration\n      </Text>\n      <Text color=\"white\" fontSize=\"20px\" textAlign=\"center\">\n        Sign Up and make your phonebook!\n      </Text>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={(values, actions) => {\n          dispatch(\n            register({\n              name: values.name,\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.setSubmitting(false);\n          actions.resetForm();\n        }}\n      >\n        {props => (\n          <Form>\n            <Box color=\"white\" w=\"300px\" mr=\"auto\" ml=\"auto\">\n              <Field name=\"name\">\n                {({ field }) => (\n                  <FormLabel margin=\"0px\" marginTop=\"20px\">\n                    Username\n                    <Input\n                      {...field}\n                      placeholder=\". . . username\"\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-z\\d]+$\"\n                      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                      required\n                    />\n                  </FormLabel>\n                )}\n              </Field>\n              <Field name=\"email\">\n                {({ field }) => (\n                  <FormLabel margin=\"0px\" marginTop=\"20px\">\n                    Email\n                    <Input\n                      {...field}\n                      placeholder=\". . . email\"\n                      type=\"email\"\n                      name=\"email\"\n                      pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                      title=\"email@dnsname.com\"\n                      required\n                    />\n                  </FormLabel>\n                )}\n              </Field>\n              <Field name=\"password\">\n                {({ field }) => (\n                  <FormLabel margin=\"0px\" marginTop=\"20px\">\n                    Password\n                    <Input\n                      {...field}\n                      placeholder=\". . . password\"\n                      type=\"password\"\n                      name=\"password\"\n                      pattern=\".{6,}\"\n                      title=\"Six or more characters\"\n                      required\n                    />\n                  </FormLabel>\n                )}\n              </Field>\n              <Button\n                type=\"submit\"\n                w=\"300px\"\n                marginTop=\"20px\"\n                color=\"white\"\n                colorScheme=\"green\"\n              >\n                Log In\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","_jsxs","Box","w","mr","ml","children","_jsx","Text","color","fontSize","textAlign","Formik","initialValues","name","email","password","onSubmit","values","actions","register","setSubmitting","resetForm","props","Form","Field","_ref","field","FormLabel","margin","marginTop","Input","_objectSpread","placeholder","type","pattern","title","required","_ref2","_ref3","Button","colorScheme","_Fragment","Helmet"],"sourceRoot":""}